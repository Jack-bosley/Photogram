//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Rendering.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Core.Rendering.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string clear_texture_comp {
            get {
                return ResourceManager.GetString("clear_texture_comp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///#version 330
        ///
        ///out vec4 outputColor;
        ///in vec2 texCoord;
        ///
        ///uniform sampler2D texture0;
        ///
        ///void main()
        ///{
        ///    outputColor = texture(texture0, texCoord);
        ///}.
        /// </summary>
        public static string default_frag {
            get {
                return ResourceManager.GetString("default.frag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///#version 330 core
        ///
        ///layout(location = 0) in vec3 aPosition;
        ///layout(location = 1) in vec2 aTexCoord;
        ///
        ///out vec2 texCoord;
        ///
        ///void main(void)
        ///{
        ///    texCoord = aTexCoord;
        ///
        ///    gl_Position = vec4(aPosition, 1.0);
        ///}.
        /// </summary>
        public static string default_vert {
            get {
                return ResourceManager.GetString("default.vert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 430
        ///
        ///struct Point
        ///{
        ///    vec4 world_position;
        ///    vec2 screen_position;
        ///    ivec2 pixel_position;
        ///    bool is_visible;
        ///};
        ///
        ///layout(std430, binding = 0) buffer points_ssbo { Point points[]; };
        ///
        ///uniform vec2 u_focal_lengths;
        ///uniform vec3 u_radial_distortion;
        ///uniform vec2 u_tangential_distortion;
        ///
        ///uniform mat3 u_camera_rotation;
        ///uniform vec3 u_camera_position;
        ///
        ///uniform ivec2 u_output_resolution;
        ///
        ///
        ///layout(local_size_x = 1, local_size_y = 1) in;
        ///void main()
        ///{
        ///    Point point = poi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string empirical_projection_comp {
            get {
                return ResourceManager.GetString("empirical_projection_comp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 430
        ///
        ///struct Point
        ///{
        ///    vec4 world_position;
        ///    vec2 screen_position;
        ///    ivec2 pixel_position;
        ///    bool is_visible;
        ///};
        ///
        ///layout(rgba32f, binding = 0) uniform image2D img_output;
        ///layout(std430, binding = 1) buffer points_ssbo { Point points[]; };
        ///
        ///
        ///layout(local_size_x = 1, local_size_y = 1) in;
        ///void main()
        ///{
        ///    Point point = points[gl_GlobalInvocationID.x];
        ///
        ///    if (point.is_visible)
        ///    {
        ///        for (int i = -10; i &lt;= 10; i++)
        ///        {
        ///            for (int j = -10; j &lt;= 1 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string empirical_projection_display_comp {
            get {
                return ResourceManager.GetString("empirical_projection_display_comp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 430
        ///
        ///struct Material
        ///{
        ///	vec4 Color4;
        ///	float reflectivity;
        ///};
        ///
        ///
        ///
        ///struct Sphere
        ///{
        ///	vec4 sphere_origin;
        ///	float sphere_radius;
        ///	int material_index;
        ///};
        ///
        ///struct Ray 
        ///{
        ///	vec4 origin;
        ///	vec4 direction;
        ///	vec4 Color4;
        ///	ivec2 pixel;
        ///	float near_point_cutoff;
        ///	float far_point_cutoff;
        ///	bool is_reflection;
        ///};
        ///Ray new_ray()
        ///{
        ///	return Ray(vec4(0, 0, 0, 0), vec4(0, 0, 0, 0), vec4(0, 0, 0, 0), ivec2(0, 0), 0, 0, false);
        ///}
        ///
        ///struct Hit
        ///{
        ///	vec4 coordinate;
        ///	vec4 normal;
        ///	bool is_hit;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string raytrace_comp {
            get {
                return ResourceManager.GetString("raytrace.comp", resourceCulture);
            }
        }
    }
}
